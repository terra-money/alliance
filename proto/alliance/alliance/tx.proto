syntax = "proto3";
package alliance.alliance;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos/base/v1beta1/coin.proto";
import "alliance/alliance/params.proto";
import "alliance/alliance/alliance.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/terra-money/alliance/x/alliance/types";

service Msg {
  rpc Delegate(MsgDelegate) returns (MsgDelegateResponse);
  rpc Redelegate(MsgRedelegate) returns(MsgRedelegateResponse);
  rpc Undelegate(MsgUndelegate) returns(MsgUndelegateResponse);
  rpc ClaimDelegationRewards(MsgClaimDelegationRewards) returns(MsgClaimDelegationRewardsResponse);
  rpc UpdateParams(MsgUpdateParams) returns(MsgUpdateParamsResponse);
  rpc CreateAlliance(MsgCreateAlliance) returns(MsgCreateAllianceResponse);
  rpc UpdateAlliance(MsgUpdateAlliance) returns(MsgUpdateAllianceResponse);
  rpc DeleteAlliance(MsgDeleteAlliance) returns(MsgDeleteAllianceResponse);
}

message MsgDelegate {
  option (cosmos.msg.v1.signer) = "delegator_address";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string                   delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   validator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}
message MsgDelegateResponse {}

message MsgUndelegate {
  option (cosmos.msg.v1.signer) = "delegator_address";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string                   delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   validator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message MsgUndelegateResponse {}

message MsgRedelegate {
  option (cosmos.msg.v1.signer) = "delegator_address";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string                   delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   validator_src_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   validator_dst_address = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message MsgRedelegateResponse {}

message MsgClaimDelegationRewards {
  option (cosmos.msg.v1.signer) = "delegator_address";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  string                   delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   validator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   denom = 3;
}

message MsgClaimDelegationRewardsResponse {}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  // the title of the update proposal
  string title = 1;
  // the description of the proposal
  string description = 2;

  string authority = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Params params    = 4 [(gogoproto.nullable) = false];
}

message MsgUpdateParamsResponse {}

message MsgCreateAlliance {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Denom of the asset. It could either be a native token or an IBC token
  string denom      = 2 [(gogoproto.moretags) = "yaml:\"denom\""];
  // The reward weight specifies the ratio of rewards that will be given to each alliance asset
  // It does not need to sum to 1. rate = weight / total_weight
  // Native asset is always assumed to have a weight of 1.
  string reward_weight = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  // A positive take rate is used for liquid staking derivatives. It defines an annualized reward rate that
  // will be redirected to the distribution rewards pool
  string take_rate = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string reward_change_rate = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  google.protobuf.Duration reward_change_interval = 6 [
    (gogoproto.nullable)   = false,
    (gogoproto.stdduration) = true
  ];

  // set a bound of weight range to limit how much reward weights can scale.
  RewardWeightRange reward_weight_range = 7 [
    (gogoproto.nullable)   = false
  ];
}

message MsgCreateAllianceResponse {}

message MsgUpdateAlliance {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Denom of the asset. It could either be a native token or an IBC token
  string denom      = 2 [(gogoproto.moretags) = "yaml:\"denom\""];
  // The reward weight specifies the ratio of rewards that will be given to each alliance asset
  // It does not need to sum to 1. rate = weight / total_weight
  // Native asset is always assumed to have a weight of 1.
  string reward_weight = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string take_rate = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string reward_change_rate = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  google.protobuf.Duration reward_change_interval = 6 [
    (gogoproto.nullable)   = false,
    (gogoproto.stdduration) = true
  ];
}

message MsgUpdateAllianceResponse {}

message MsgDeleteAlliance {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string denom      = 2 [(gogoproto.moretags) = "yaml:\"denom\""];
}

message MsgDeleteAllianceResponse {}
